{"version":3,"sources":["components/Home.js","components/EditPet.js","components/CreatePet.js","components/ViewPet.js","components/Register.js","components/Login.js","components/SignInView.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","className","class","to","map","pet","is-selected","name","type","description","_id","onClick","e","navigate","EditPet","setName","setType","setDescription","skills1","setSkills1","skills2","setSkills2","skills3","setSkills3","errors","setErrors","onSubmit","preventDefault","put","placeholder","onChange","target","value","message","units","skills","CreatePet","post","ViewPet","delete","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","user","withCredentials","loggedIn","style","width","Login","errorMessage","setErrorMessage","length","SignInView","Nav","data-target","id","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8b6d6322.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst Home = props => {\n\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = () => {\n        axios.get(\"http://localhost:8008/api/pets\", {\n          withCredentials: true\n        })\n          .then( res => setPets(res.data) )\n          .catch( err => {\n            if(!err.response.data.verified) {\n              navigate(\"/sign_in\");\n            } else {\n              console.log(err);\n            }\n          });\n    }\n\n    useEffect( () => {\n        axios.get(\"http://localhost:8008/api/pets\")\n            .then(res => {\n                setPets(res.data)})\n            .catch(err => console.log(err));\n    },[]);\n\n    const View = _id => {\n        navigate(`/edit/${_id}`)\n    }\n\n    return (\n        <div className = \"container\">\n            <div class=\"buttons\">\n                <a class=\"button is-light\">\n                    <strong><Link to =\"/new\" >Add a new pet!</Link></strong>\n                </a>\n            </div>  \n                <table class=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                        <th>Edit</th>\n                        <th></th>\n                        <th>View</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                    pets.map(pet =>\n\n                    <tr is-selected>\n                        <td>{pet.name}</td>\n                        <td>{pet.type}</td>\n                        <td>{pet.description}</td>\n                        <td><Link to = {\"/edit/\"+pet._id} onClick = {e => View(pet._id)}>Edit</Link></td>\n                        <td>|</td>\n                        <td><Link to={\"/pets/\"+pet._id}>Details</Link></td>\n                    </tr>\n                    )}\n                    </tbody>\n                </table>      \n        </div>\n    )\n\n\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst EditPet = props => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skills1, setSkills1] = useState(\"\");\n    const [skills2, setSkills2] = useState(\"\");\n    const [skills3, setSkills3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n\n        \n\n    useEffect( () => {\n        axios.get(`http://localhost:8008/api/pets/${props._id}`)\n            .then( res=> {\n                console.log(res.data);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkills1(res.data.skills1);\n                setSkills2(res.data.skills2);\n                setSkills3(res.data.skills3);\n            })\n            .catch(err => console.log(err));\n    \n    }, []);\n\n    const updatePet = e => {\n        e.preventDefault();\n        \n        axios.put(`http://localhost:8008/api/pets/edit/${props._id}`,{_id: props._id,name, type, description, skills1, skills2, skills3}\n        )\n            .then(res => {\n                if(res.data.errors){\n                    setErrors(res.data.errors);\n                }\n                else{\n                    navigate(\"/\");\n                }\n            })\n            .catch( err => console.log(err) );\n    }\n\n    return (\n        <div className = \"container\">\n            \n        <form onSubmit={ updatePet }>\n        <article class=\"message is-success\">\n            <div class=\"message-header\">\n                <p>Edit {name}</p>\n            </div>\n            <div class=\"message-body\">\n\n            <div className=\"column\">\n                <label className=\"label\">Pet Name:</label>\n                <input placeholder ={name} onChange={e => setName(e.target.value)} value={name} />\n                {\n                    errors.name ? \n                    <p>{errors.name.message}</p> : \"\"\n                }\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Pet Type:</label>\n                <input type=\"string\" onChange={e => setType(e.target.value)} value={type} />\n                {\n                    errors.units ? \n                    <p class=\"help is-danger\">{errors.type.message}</p> :\n                    \"\"\n                }\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Description:</label>\n                <input type=\"string\" onChange={e => setDescription(e.target.value)} value={description} />\n                {\n                    errors.units ? \n                    <p class=\"help is-danger\">{errors.description.message}</p> :\n                    \"\"\n                }\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Skills (optional):</label>\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Skill 1:</label>\n                <input type=\"string\" onChange={e => setSkills1(e.target.value)} value={skills1} />\n                {\n                    errors.units ? \n                    <p class=\"help is-danger\">{errors.skills.message}</p> :\n                    \"\"\n                }\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Skills 2:</label>\n                <input type=\"string\" onChange={e => setSkills2(e.target.value)} value={skills2} />\n                {\n                    errors.units ? \n                    <p class=\"help is-danger\">{errors.skills.message}</p> :\n                    \"\"\n                }\n            </div>\n\n            <div className=\"column\">\n                <label className=\"label\">Skills 3:</label>\n                <input type=\"string\" onChange={e => setSkills3(e.target.value)} value={skills3} />\n                {\n                    errors.units ? \n                    <p class=\"help is-danger\">{errors.skills.message}</p> :\n                    \"\"\n                }\n            </div>\n            \n            </div>\n            <div class=\"buttons\">\n                <button className=\"button is-success\" type=\"submit\">\n                    Edit Pet\n                </button>\n            </div>\n        </article>\n        </form>\n        </div>\n    )\n}\n\nexport default EditPet;","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst CreatePet = props => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skills1, setSkills1] = useState(\"\");\n    const [skills2, setSkills2] = useState(\"\");\n    const [skills3, setSkills3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const addPet = e => {\n        e.preventDefault();\n        const pet = {name, type, description, skills1, skills2, skills3};\n        axios.post(\"http://localhost:8008/api/pets\", {name, type, description, skills1, skills2, skills3})\n          .then( res => {\n            if(res.data.errors) {\n              setErrors(res.data.errors);\n            } \n            else {\n              navigate(\"/\");\n            }\n          })\n          .catch( err => console.log(err) );\n      }\n\n      return (\n        <div className = \"container\">\n        <form onSubmit={ addPet }>\n            <article class=\"message is-success\">\n\n                <div class=\"message-header\">\n                    <p>Know a pet needing a home? Enter the pet information below!</p>\n                </div>\n\n                <div class=\"message-body\">\n                    <div className=\"column\">\n                        <label className=\"label\">Pet Name:</label>\n                        <input type=\"string\" onChange={e => setName(e.target.value)} value={name} />\n                        {\n                            errors.name ? \n                            <p>{errors.name.message}</p> : \"\"\n                        }\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Pet Type:</label>\n                        <input type=\"string\" onChange={e => setType(e.target.value)} value={type} />\n                        {\n                            errors.units ? \n                            <p class=\"help is-danger\">{errors.type.message}</p> :\n                            \"\"\n                        }\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Description:</label>\n                        <input type=\"string\" onChange={e => setDescription(e.target.value)} value={description} />\n                        {\n                            errors.units ? \n                            <p class=\"help is-danger\">{errors.description.message}</p> :\n                            \"\"\n                        }\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Skills (optional):</label>\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Skill 1:</label>\n                        <input type=\"string\" onChange={e => setSkills1(e.target.value)} value={skills1} />\n                        {\n                            errors.units ? \n                            <p class=\"help is-danger\">{errors.skills.message}</p> :\n                            \"\"\n                        }\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Skills 2:</label>\n                        <input type=\"string\" onChange={e => setSkills2(e.target.value)} value={skills2} />\n                        {\n                            errors.units ? \n                            <p class=\"help is-danger\">{errors.skills.message}</p> :\n                            \"\"\n                        }\n                    </div>\n\n                    <div className=\"column\">\n                        <label className=\"label\">Skills 3:</label>\n                        <input type=\"string\" onChange={e => setSkills3(e.target.value)} value={skills3} />\n                        {\n                            errors.units ? \n                            <p class=\"help is-danger\">{errors.skills.message}</p> :\n                            \"\"\n                        }\n                    </div>\n                    <div class=\"buttons\">\n                        <button className=\"button is-success\" type=\"submit\">\n                          Add Pet\n                        </button>\n                    </div>                  \n                </div>\n            </article>\n        </form>\n        </div>\n        )\n}\n\nexport default CreatePet;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst ViewPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skills1, setSkills1] = useState(\"\");\n    const [skills2, setSkills2] = useState(\"\");\n    const [skills3, setSkills3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        axios.get(`http://localhost:8008/api/pets/${props._id}`)\n            .then(res => {\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkills1(res.data.skills1);\n                setSkills2(res.data.skills2);\n                setSkills3(res.data.skills3);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const Edit = _id => {\n        navigate(`/pets/edit/${props._id}`)\n    }\n\n    const Delete = _id => {\n        axios.delete(`http://localhost:8008/api/pets/${props._id}`)\n        navigate(\"/\")\n    }\n\n    return (\n        <div className = \"container\">\n            \n        <article class=\"message is-success\">\n            <div class=\"message-header\">\n                <p>Details about: {name}</p>\n            </div>\n            <div class=\"message-body\">\n                <h3><strong>Pet Type:</strong> {type}</h3>\n                <br></br>\n                <h3><strong>Description:</strong> {description}</h3>\n                <br></br>\n                <h3><strong>Skills:</strong>\n                <ul>\n                    <li>{skills1}</li>\n                    <li>{skills2}</li>\n                    <li>{skills3}</li>\n                </ul>\n                </h3>\n                <br></br>\n                </div>\n                <div class=\"buttons\">\n                        <button className=\"button is-success\" onClick = {e => Delete(props._id)}>\n                          Adopt {name}\n                        </button>\n                </div>\n        </article>\n        </div>\n    )\n}\n\nexport default ViewPet;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst Register = props => {\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const register = e => {\n    e.preventDefault();\n    const user = { firstName, lastName, email, password, confirmPassword };\n    axios.post(\"http://localhost:8008/api/register\", user, {\n      withCredentials: true\n    })\n      .then( res => {\n        console.log(res);\n        if(res.data.loggedIn) {\n          navigate(\"/\");\n        } else {\n          setErrors(res.data.errors);\n        }\n      }).catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-dark\">\n      <div className=\"message-header\">\n        <p>Register</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ register }>\n          <label className=\"label\">First Name</label>\n          <input type=\"text\" className=\"input\" onChange={e => setFirstName(e.target.value)} />\n          {\n            errors.firstName ? \n            <p class=\"help is-danger\">{errors.firstName.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Last Name</label>\n          <input type=\"text\" className=\"input\" onChange={e => setLastName(e.target.value)} />\n          {\n            errors.lastName ? \n            <p class=\"help is-danger\">{errors.lastName.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Email</label>\n          <input type=\"text\" className=\"input\" onChange={e => setEmail(e.target.value)} />\n          {\n            errors.email ? \n            <p class=\"help is-danger\">{errors.email.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setPassword(e.target.value)} />\n          {\n            errors.password ? \n            <p class=\"help is-danger\">{errors.password.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Confirm Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setConfirmPassword(e.target.value)} />\n          {\n            errors.confirmPassword ? \n            <p class=\"help is-danger\">{errors.confirmPassword.message}</p> :\n            \"\"\n          }\n          <br /><br /><br />\n          <button style={{width: \"100%\"}} className=\"button is-dark\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </article>\n  );\n\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst Login = props => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const login = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8008/api/login\", {email, password}, {\n      withCredentials: true\n    })\n      .then( res => {\n        console.log(res);\n        if(res.data.loggedIn) {\n          navigate(\"/\");\n        } else {\n          setErrorMessage(\"Invalid login attempt!\");\n        }\n      }).catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-success\">\n      <div className=\"message-header\">\n        <p>Login</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ login }>\n          <label className=\"label\">Email</label>\n          <input type=\"text\" className=\"input\" onChange={e => setEmail(e.target.value)} />\n          <label className=\"label\">Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setPassword(e.target.value)} />\n          <br /><br />\n          <button style={{width: \"100%\"}} className=\"button is-success\" type=\"submit\">Submit</button>\n          {\n            errorMessage.length > 0 ? \n            <><br /><p className=\"is-danger\">{errorMessage}</p></> :\n            \"\"\n          }\n        </form>\n      </div>\n    </article>\n  );\n\n}\n\nexport default Login;","import React from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\n\n\nconst SignInView = props => {\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <Register />\n      </div>\n      <div className=\"column\">\n        <Login />\n      </div>\n    </div>\n  );\n}\n\nexport default SignInView;","import React from 'react';\nimport { Link } from '@reach/router';\n\n\nconst Nav = props => {\n  return (\n    <nav className=\"navbar is-dark\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n        </Link>\n        <div className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n        <div class=\"buttons\">\n                <a class=\"button is-light\">\n                    <strong><Link to =\"/\" >Home</Link></strong>\n                </a>\n            </div>  \n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <Link className=\"button is-info\" to=\"/sign_in\">Sign In</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\nimport { Router } from '@reach/router';\nimport { navigate, Link } from '@reach/router';\nimport Home from './components/Home';\nimport EditPet from './components/EditPet';\nimport CreatePet from './components/CreatePet';\nimport ViewPet from './components/ViewPet';\nimport 'bulma/css/bulma.min.css';\nimport SignInView from './components/SignInView';\nimport Nav from './components/Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <section class=\"hero is-info\">\n            <div class=\"hero-body\">\n                <div class=\"container\">\n                <h1 class=\"title\">\n                    Pet Shelter\n                </h1>\n                <h2 class=\"subtitle\">\n                    These pets are looking for a good home\n                </h2>\n                </div>\n            </div>\n            </section>\n      <Router>\n        <Home path=\"/\" />\n        <EditPet path=\"/edit/:_id\" />\n        <CreatePet path=\"/new\" />\n        <ViewPet path=\"/pets/:_id\" />\n        <SignInView path=\"/sign_in\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}